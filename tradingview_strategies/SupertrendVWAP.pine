// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © shubhamtaywade82

//@version=6
strategy("Supertrend Strategy + VWAP", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=15)

// Supertrend Inputs
atrPeriod = input.int(10, "ATR Length", minval = 1)
factor = input.float(3.0, "Factor", minval = 0.01, step = 0.01)

// Supertrend Calculation
[supertrend, direction] = ta.supertrend(factor, atrPeriod)
supertrend := barstate.isfirst ? na : supertrend

// Supertrend Plots
upTrend = plot(direction < 0 ? supertrend : na, "Up Trend", color=color.blue, style=plot.style_linebr)
downTrend = plot(direction < 0 ? na : supertrend, "Down Trend", color=color.red, style=plot.style_linebr)
bodyMiddle = plot(barstate.isfirst ? na : (open + close) / 2, "Body Middle", display=display.none)

fill(bodyMiddle, upTrend, color.new(color.blue, 90), fillgaps=false)
fill(bodyMiddle, downTrend, color.new(color.red, 90), fillgaps=false)

// Supertrend Alerts
alertcondition(direction[1] > direction, title="Downtrend to Uptrend", message="The Supertrend value switched from Downtrend to Uptrend")
alertcondition(direction[1] < direction, title="Uptrend to Downtrend", message="The Supertrend value switched from Uptrend to Downtrend")
alertcondition(direction[1] != direction, title="Trend Change", message="The Supertrend value switched from Uptrend to Downtrend or vice versa")

// Supertrend Strategy Logic
if ta.change(direction) < 0
    strategy.entry("Long Entry", strategy.long)

if ta.change(direction) > 0
    strategy.entry("Short Entry", strategy.short)

// VWAP Inputs
hideonDWM = input(false, title="Hide VWAP on 1D or Above", group="VWAP Settings", display=display.data_window)
var anchor = input.string(defval="Session", title="Anchor Period",
    options=["Session", "Week", "Month", "Quarter", "Year", "Decade", "Century", "Earnings", "Dividends", "Splits"], group="VWAP Settings")
src = input(title="Source", defval=hlc3, group="VWAP Settings", display=display.data_window)
offset = input.int(0, title="Offset", group="VWAP Settings", minval=0, display=display.data_window)

// VWAP Calculation
cumVolume = ta.cum(volume)
if barstate.islast and cumVolume == 0
    runtime.error("No volume is provided by the data vendor.")

new_earnings = request.earnings(syminfo.tickerid, earnings.actual, barmerge.gaps_on, barmerge.lookahead_on, ignore_invalid_symbol=true)
new_dividends = request.dividends(syminfo.tickerid, dividends.gross, barmerge.gaps_on, barmerge.lookahead_on, ignore_invalid_symbol=true)
new_split = request.splits(syminfo.tickerid, splits.denominator, barmerge.gaps_on, barmerge.lookahead_on, ignore_invalid_symbol=true)

isNewPeriod = switch anchor
    "Earnings" => not na(new_earnings)
    "Dividends" => not na(new_dividends)
    "Splits" => not na(new_split)
    "Session" => timeframe.change("D")
    "Week" => timeframe.change("W")
    "Month" => timeframe.change("M")
    "Quarter" => timeframe.change("3M")
    "Year" => timeframe.change("12M")
    "Decade" => timeframe.change("12M") and year % 10 == 0
    "Century" => timeframe.change("12M") and year % 100 == 0
    => false

isEsdAnchor = anchor == "Earnings" or anchor == "Dividends" or anchor == "Splits"
if na(src[1]) and not isEsdAnchor
    isNewPeriod := true

float vwapValue = na

if not (hideonDWM and timeframe.isdwm)
    [vwapValue, _, _] = ta.vwap(src, isNewPeriod, 1)

// VWAP Plot
plot(vwapValue, title="VWAP", color=#2962FF, offset=offset)
